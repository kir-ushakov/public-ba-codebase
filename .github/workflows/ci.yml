name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  security-events: write # needed to upload SARIF

env:
  NODE_VERSION: '20'

jobs:
  # Security scan
  security-scan:
    name: Security Scan (Trivy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Scan frontend
      - name: Trivy Scan Frontend
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './frontend'
          scanners: 'vuln'
          format: 'sarif'
          output: 'trivy-frontend.sarif'

      # Scan backend
      - name: Trivy Scan Backend
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './backend'
          scanners: 'vuln'
          format: 'sarif'
          output: 'trivy-backend.sarif'

      - name: Upload Trivy scan results to GitHub Security tab (Frontend)
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-frontend.sarif'
          category: 'trivy-frontend'

      - name: Upload Trivy scan results to GitHub Security tab (Backend)
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-backend.sarif'
          category: 'trivy-backend'

  # E2E tests with Playwright
  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    
    env:
      # Environment variables for docker-compose
      NODE_ENV: development
      DB_USER: testuser
      DB_PASSWORD: testpassword
      SESSION_SECRET: test-session-secret-for-ci
      EMAIL_DOMAIN: test.com
      HOST: localhost
      AUTHENTICATION_STRATEGY: local
      JWT_SECRET: test-jwt-secret-for-ci
      SENDGRID_API_KEY: test-key
      MAILGUN_API_KEY: test-key
      MAIL_API: test
      SLACK_CLIENT_ID: test
      SLACK_CLIENT_SECRET: test
      SLACK_SIGNING_SECRET: test
      NGROK_AUTHTOKEN: test
      NGROK_STATIC_DOMAIN: test
      NGROK_FORWARD_PATH: test
      GOOGLE_CLIENT_ID: test
      GOOGLE_CLIENT_SECRET: test
      GOOGLE_OAUTH_CALLBACK: http://localhost:4200/auth/google/callback
      OPEN_AI_API_KEY: test-key
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./frontend

      - name: Start Docker services
        run: docker-compose -f docker-compose.yml up -d --build
        
      - name: Wait for services to be ready
        run: |
          echo "Waiting for frontend to be ready on port 4200..."
          timeout 120 bash -c 'until curl -f http://localhost:4200 2>/dev/null; do echo "Waiting..."; sleep 3; done' || echo "Frontend may not be ready"
          echo "Waiting for nginx to be ready on port 443..."
          timeout 60 bash -c 'until curl -k -f https://localhost:443 2>/dev/null; do echo "Waiting..."; sleep 3; done' || echo "Nginx may not be ready"
          echo "Services should be ready"
          docker ps

      - name: Run Playwright tests
        run: npm run e2e
        working-directory: ./frontend

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: frontend/test-results/
          retention-days: 30

      - name: Show Docker logs on failure
        if: failure()
        run: |
          echo "=== Frontend logs ==="
          docker logs frontend || true
          echo "=== Backend logs ==="
          docker logs backend || true
          echo "=== Nginx logs ==="
          docker logs nginx || true

      - name: Shutdown Docker services
        if: always()
        run: docker-compose -f docker-compose.yml down -v